{"version":3,"sources":["src/app/taskboard/taskboard.component.html","src/app/taskboard/taskboard.component.scss","src/app/taskboard/taskboard.component.ts","src/app/taskboard/taskboard.module.ts","src/app/taskboard/taskboard.routing.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"taskboard page-height\\\">\\r\\n  <div class=\\\"taskboard-wrapper\\\" *ngFor=\\\"let board of taskboard\\\">\\r\\n    <div class=\\\"taskboard-list\\\">\\r\\n      <div class=\\\"taskboard-header text-uppercase\\\">\\r\\n        <strong>{{board.title}}</strong>\\r\\n      </div>\\r\\n      <div class=\\\"taskboard-cards\\\" [dragula]='\\\"task-group\\\"'>\\r\\n        <div class=\\\"taskboard-task\\\" *ngFor=\\\"let task of board.tasks\\\" [ngClass]=\\\"task.class\\\">\\r\\n          <div class=\\\"taskboard-task-title\\\">{{task.title}}</div>\\r\\n          <small class=\\\"card-text text-muted\\\">{{task.description}}</small>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"/* $colors\\n ------------------------------------------*/\\n.taskboard {\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  white-space: nowrap;\\n  height: calc(100vh - 3.5rem);\\n  padding: 1rem;\\n}\\n.taskboard .taskboard-wrapper {\\n  width: 280px;\\n  padding-right: 0.5rem;\\n  padding-left: 0.5rem;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  vertical-align: top;\\n  height: 100%;\\n}\\n.taskboard .taskboard-wrapper:first-child {\\n  padding-left: 0;\\n}\\n.taskboard .taskboard-wrapper:last-child {\\n  padding-right: 0;\\n}\\n.taskboard .taskboard-list {\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 100%;\\n  white-space: normal;\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.07);\\n  background-clip: border-box;\\n  border-radius: 0.25rem;\\n}\\n.taskboard .taskboard-header {\\n  position: relative;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  text-transform: uppercase;\\n  letter-spacing: 0.02rem;\\n  font-size: 13px;\\n  padding: 0.5rem 0.5rem 0;\\n}\\n.taskboard .taskboard-task {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  background-clip: border-box;\\n  border-radius: 0.25rem;\\n  padding: 0.5rem;\\n  margin-bottom: 0.5rem;\\n}\\n.taskboard .taskboard-task:last-child {\\n  margin-bottom: 0;\\n}\\n.taskboard .taskboard-task:hover {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n.taskboard .taskboard-task:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  border: 4px solid transparent;\\n  top: 0;\\n  border-top-width: 12px;\\n  border-bottom-color: transparent;\\n  right: 6px;\\n}\\n.taskboard .taskboard-task.task-status-success:after {\\n  border-top-color: #66bb6a;\\n  border-right-color: #66bb6a;\\n  border-left-color: #66bb6a;\\n}\\n.taskboard .taskboard-task.task-status-info:after {\\n  border-top-color: #29b6f6;\\n  border-right-color: #29b6f6;\\n  border-left-color: #29b6f6;\\n}\\n.taskboard .taskboard-task.task-status-warning:after {\\n  border-top-color: #ffee58;\\n  border-right-color: #ffee58;\\n  border-left-color: #ffee58;\\n}\\n.taskboard .taskboard-task.task-status-danger:after {\\n  border-top-color: #ef5350;\\n  border-right-color: #ef5350;\\n  border-left-color: #ef5350;\\n}\\n.taskboard .taskboard-cards {\\n  padding: 0.5rem;\\n  box-sizing: border-box;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n}\\n.taskboard .taskboard-task-title {\\n  margin-bottom: 0.5rem;\\n}\\n:host {\\n  padding: 0 !important;\\n  height: 100%;\\n}\\n.gu-mirror {\\n  background-color: white;\\n  border-radius: 0.125rem;\\n  padding: 0.5rem;\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component } from '@angular/core';\r\n\r\ninterface Tasks {\r\n  title: string;\r\n  description: string;\r\n  class?: string;\r\n}\r\n\r\ninterface Taskboard {\r\n  title: string;\r\n  tasks: Tasks[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-taskboard',\r\n  templateUrl: './taskboard.component.html',\r\n  styleUrls: ['./taskboard.component.scss']\r\n})\r\nexport class TaskboardComponent {\r\n  taskboard: Taskboard[] = [\r\n    {\r\n      title: 'backlog',\r\n      tasks: [\r\n        {\r\n          title: 'Responsive bug',\r\n          description: 'Etiam porta sem malesuada magna mollis euismod.'\r\n        },\r\n        {\r\n          title: 'Travel checklist',\r\n          description: 'Curabitur blandit tempus porttitor.'\r\n        },\r\n        {\r\n          title: 'Budget review',\r\n          description:\r\n            'Cras justo odio, dapibus ac facilisis in, egestas eget quam. Integer posuere erat a ante venenatis dapibus posuere velit aliquet.',\r\n          class: 'task-status-success'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'todo',\r\n      tasks: [\r\n        {\r\n          title: 'QA Testing',\r\n          description: 'Etiam porta sem malesuada magna mollis euismod.'\r\n        },\r\n        {\r\n          title: 'Layout design',\r\n          description:\r\n            'Sed posuere consectetur est at lobortis. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.',\r\n          class: 'task-status-danger'\r\n        },\r\n        {\r\n          title: 'Fix navigation menu',\r\n          description: 'Donec sed odio dui.',\r\n          class: 'task-status-info'\r\n        },\r\n        {\r\n          title: 'Update bootstrap 4',\r\n          description: 'Aenean lacinia bibendum nulla sed consectetur.'\r\n        },\r\n        {\r\n          title: 'Run build tools',\r\n          description:\r\n            'Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.'\r\n        },\r\n        {\r\n          title: 'List article ideas',\r\n          description:\r\n            'Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.',\r\n          class: 'task-status-success'\r\n        },\r\n        {\r\n          title: 'Reactjs fixes',\r\n          description:\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\r\n        },\r\n        {\r\n          title: 'Implement SSL',\r\n          description: 'Etiam porta sem malesuada magna mollis euismod.',\r\n          class: 'task-status-warning'\r\n        },\r\n        {\r\n          title: 'Cleanup code',\r\n          description: 'Sollicitudin',\r\n          class: 'task-status-danger'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'In Process',\r\n      tasks: [\r\n        {\r\n          title: 'QOS Assessment',\r\n          description:\r\n            'Maecenas sed diam eget risus varius blandit sit amet non magna.'\r\n        },\r\n        {\r\n          title: 'Schedule new tasks',\r\n          description: 'Sed posuere consectetur est at lobortis.',\r\n          class: 'task-status-warning'\r\n        },\r\n        {\r\n          title: 'Add dashboard variants',\r\n          description: 'Nulla vitae elit libero, a pharetra augue.'\r\n        },\r\n        {\r\n          title: 'Extended color scheme support',\r\n          description:\r\n            'Morbi leo risus, porta ac consectetur ac, vestibulum at eros.'\r\n        },\r\n        {\r\n          title: 'Merge unit tests',\r\n          description:\r\n            'Maecenas sed diam eget risus varius blandit sit amet non magna.',\r\n          class: 'task-status-info'\r\n        },\r\n        {\r\n          title: 'Test final version',\r\n          description:\r\n            'Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'backlog',\r\n      tasks: [\r\n        {\r\n          title: 'Integrate Angular 4',\r\n          description: 'Nulla vitae elit libero, a pharetra augue.'\r\n        },\r\n        {\r\n          title: 'Additional fields',\r\n          description: 'Donec id elit non mi porta gravida at eget metus.'\r\n        },\r\n        {\r\n          title: 'Draggable task board',\r\n          description: 'Sed posuere consectetur est at lobortis.',\r\n          class: 'task-status-danger'\r\n        },\r\n        {\r\n          title: 'Setup CI server',\r\n          description: 'Maecenas faucibus mollis interdum.'\r\n        },\r\n        {\r\n          title: 'Assign new tasks',\r\n          description: 'Nullam quis risus eget urna mollis ornare vel eu leo.',\r\n          class: 'task-status-success'\r\n        },\r\n        {\r\n          title: 'Contact administrator',\r\n          description:\r\n            'Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.'\r\n        },\r\n        {\r\n          title: 'Commit changes',\r\n          description: 'Aenean lacinia bibendum nulla sed consectetur.'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Complete',\r\n      tasks: [\r\n        {\r\n          title: 'Store new files',\r\n          description: 'Sed posuere consectetur est at lobortis.'\r\n        },\r\n        {\r\n          title: 'Build landing page',\r\n          description:\r\n            'Maecenas sed diam eget risus varius blandit sit amet non magna.'\r\n        },\r\n        {\r\n          title: 'Setup basic layout',\r\n          description: 'Vestibulum id ligula porta felis euismod semper.',\r\n          class: 'task-status-info'\r\n        },\r\n        {\r\n          title: 'Graphical fixes',\r\n          description:\r\n            'Morbi leo risus, porta ac consectetur ac, vestibulum at eros.'\r\n        },\r\n        {\r\n          title: 'Email alerts',\r\n          description: 'Donec sed odio dui.'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\n\r\nimport { TaskboardComponent } from './taskboard.component';\r\nimport { TaskboardRoutes } from './taskboard.routing';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(TaskboardRoutes),\r\n    DragulaModule.forRoot()\r\n  ],\r\n  declarations: [TaskboardComponent]\r\n})\r\nexport class TaskboardModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { TaskboardComponent } from './taskboard.component';\r\n\r\nexport const TaskboardRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskboardComponent,\r\n    data: {\r\n      heading: 'Taskboard',\r\n      removeFooter: true\r\n    }\r\n  }\r\n];\r\n"],"sourceRoot":"webpack:///","file":"taskboard-taskboard-module-es5.js"}